<aside>
ðŸ’¡

**Ejercicios**

1. Experimente haciendo sumas entre distintos tipos de datos y apunte los resultados.
    1. Si le salen errores, **no se asuste.** Lealos e intente comprender quÃ© significan.
    *Los errores son oportunidades de aprendizaje.*
    2. Por ejemplo:
        1. string + string â†’ ?
        2. string + int â†’ ?
        3. int + string â†’ ?
        4. list + list â†’ ?
        5. string + list â†’ ?
        6. float + int â†’ ?
        7. bool + bool â†’ ?

```jsx
print ("string1 " + " string2")
```

output: 
string1  string2

```jsx
print ("string1 " + 2)
```

ouput: solo se pueden concatenar un string a otro string

File "c:\Users\citrixloaner\Downloads\week_4.py", line 4, in <module>
print ("string1 " + 2)
~~~~~~~~~~~^~~
TypeError: can only concatenate str (not "int") to str

```jsx
print (2 + "string1 ")
```

output: el operador no permite sumar un string a un entero

File "c:\Users\citrixloaner\Downloads\week_4.py", line 4, in <module>
print (2 + "string1 ")
~~^~~~~~~~~~~~
TypeError: unsupported operand type(s) for +: 'int' and 'str'

```jsx

list1 = [1,2,3,4]
list2= [4,3,2,1]

print (list1 + list2)
```

ouput: exitoso, se suman los contenidos de las dos listas

[1, 2, 3, 4, 4, 3, 2, 1]

```jsx
print ("string1" + list2)
```

output: no se puede concatenar una lista a un string

File "c:\Users\citrixloaner\Downloads\week_4.py", line 5, in <module>
print ("string1" + list2)
~~~~~~^~~
TypeError: can only concatenate str (not "list") to str

```jsx
print ( 4.555567 + "string")
```

output= el operador no permite sumar un string a un float

File "c:\Users\citrixloaner\Downloads\week_4.py", line 5, in <module>
print ( 4.555567 + "string")
~~~^~~~
TypeError: unsupported operand type(s) for +: 'float' and 'str'

```jsx
print ( True + False)
```

output= Exitoso, True + False = 1

1. Cree un programa que le pida al usuario su nombre, apellido, y edad, y muestre si es un bebÃ©, niÃ±o, preadolescente, adolescente, adulto joven, adulto, o adulto mayor.

```jsx

name= input("Please enter your name: ")
lastname= input("Please enter your lastname: ")
age= int(input("Please enter your su age "))

if (age < 10):
    print ("You are a kid")
elif (age < 15 ):
    print("Your are a preteen")
elif (age < 18 ):
    print("You are teen")
elif (age < 35 ):
    print("You are a Young Adult")
elif (age < 65 ):
    print("You are an Adult")
else:
    print("You are an older Adult")

```

1. Cree un programa con un numero secreto del 1 al 10. El programa no debe cerrarse hasta que el usuario adivine el numero.
    1. Debe investigar cÃ³mo generar un nÃºmero aleatorio distinto cada vez que se ejecute.

```jsx

import random

random_number= random.randint(1, 10)
user_number= 0

print (f"Random number generated by system is {random_number} ")

while (user_number != random_number ):
    user_number= int(input("Please enter a number from 1 to 10: "))

print("Congratulations!! ,  you have guessed the random number")
```

1. Cree un programa que le pida tres nÃºmeros al usuario y muestre el mayor.

```jsx

user_number= 0
highest_number = 0

for i in range(3):
 user_number= int(input((f"Please enter the number{i+1} ")))
 if (user_number > highest_number):
    highest_number = user_number

print(f"The highest numer is  {highest_number}")

```

1. Dada `n` cantidad de notas de un estudiante, calcular:
    1. Cuantas notas tiene aprobadas (mayor a 70).
    2. Cuantas notas tiene desaprobadas (menor a 70).
    3. El promedio de todas.
    4. El promedio de las aprobadas.
    5. El promedio de las desaprobadas.
    
    ```jsx
    
    total_amount_grades_input = 5
    approved_grades_counter = 0
    failed_grades_counter = 0
    approved_grades_total = 0
    failed_grades_total = 0
    user_grade = 0
    approved_average= 0
    failed_average= 0
    total_average = 0
    
    for i in range(total_amount_grades_input):
        user_grade=int(input(f"Please enter the grade{i}: "))
        if (user_grade<70):
            failed_grades_counter = failed_grades_counter + 1
            failed_grades_total = failed_grades_total+user_grade
        else:
            approved_grades_counter = approved_grades_counter + 1    
            approved_grades_total = approved_grades_total+user_grade
    
    try:
        total_average = (approved_grades_total+failed_grades_total)/total_amount_grades_input
    except ZeroDivisionError:
        total_average = 0
    
    try:
        approved_average = approved_grades_total/approved_grades_counter
    except ZeroDivisionError:
        approved_average = 0
    
    try:
        failed_average = failed_grades_total/failed_grades_counter
    except ZeroDivisionError:
        failed_average = 0
    
    print (f"Passed grades greater than or equal to 70: {approved_grades_counter} ")
    print (f"Failed grades less than 70: {failed_grades_counter} ")
    print (f"Total grade point average (including passed and failed grades): {total_average} ")
    print (f"Approved average greater than or equal to 70: {approved_average} ")
    print (f"Failed average less than 70: {failed_average} ")
    
    ```
    
</aside>